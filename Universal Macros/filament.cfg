

[gcode_macro LOAD_FILAMENT]
# Macro para carregar filamento com suporte a Direct Drive e Bowden
# Parâmetros opcionais:
# TYPE: "direct" ou "bowden" (padrão: "direct")
# FILAMENT: "PLA", "PETG", "ABS", etc. (padrão: "PLA")
# LOAD_LENGTH, LOAD_SPEED, PURGE_LENGTH, PURGE_SPEED podem ser personalizados
gcode:
    {% set TYPE = params.TYPE|default("direct") %}
    {% set FILAMENT = params.FILAMENT|default("PLA") %}
    
    # Definir temperaturas para diferentes tipos de filamento
    {% set TEMPS = {
        "PLA": 210,
        "PETG": 240,
        "ABS": 250,
        "TPU": 225
    } %}
    
    # Obter a temperatura para o filamento especificado
    {% set TARGET_TEMP = TEMPS[FILAMENT]|default(220) %}
    
    {% if TYPE == "direct" %}
        {% set LOAD_LENGTH = params.LOAD_LENGTH|default(30)|float %}
        {% set LOAD_SPEED = params.LOAD_SPEED|default(300)|float %}
        {% set PURGE_LENGTH = params.PURGE_LENGTH|default(10)|float %}
        {% set PURGE_SPEED = params.PURGE_SPEED|default(150)|float %}
    {% elif TYPE == "bowden" %}
        {% set LOAD_LENGTH = params.LOAD_LENGTH|default(750)|float %}
        {% set LOAD_SPEED = params.LOAD_SPEED|default(600)|float %}
        {% set PURGE_LENGTH = params.PURGE_LENGTH|default(40)|float %}
        {% set PURGE_SPEED = params.PURGE_SPEED|default(200)|float %}
    {% else %}
        M117 Tipo de extrusor inválido!
        RETURN
    {% endif %}

    M117 Aquecendo bico para {FILAMENT}...
    M109 S{TARGET_TEMP}                   ; Aquecer e aguardar a temperatura alvo
    
    M117 Carregando {FILAMENT} ({TYPE})...
    G91                                   ; Modo de posicionamento relativo
    G1 E{LOAD_LENGTH} F{LOAD_SPEED}       ; Carregar o filamento
    G1 E{PURGE_LENGTH} F{PURGE_SPEED}     ; Purgar o filamento
    G90                                   ; Retornar ao modo absoluto
    M400                                  ; Garantir que os movimentos terminem
    M117 {FILAMENT} carregado ({TYPE})


[gcode_macro UNLOAD_FILAMENT]
# Macro para descarregar filamento com suporte a Direct Drive e Bowden
# Parâmetros opcionais:
# TYPE: "direct" ou "bowden" (padrão: "direct")
# FILAMENT: "PLA", "PETG", "ABS", etc. (padrão: "PLA")
# RETRACT_LENGTH e RETRACT_SPEED podem ser personalizados
gcode:
    {% set TYPE = params.TYPE|default("direct") %}
    {% set FILAMENT = params.FILAMENT|default("PLA") %}
    
    # Definir temperaturas para diferentes tipos de filamento
    {% set TEMPS = {
        "PLA": 210,
        "PETG": 240,
        "ABS": 250,
        "TPU": 225
    } %}
    
    # Obter a temperatura para o filamento especificado
    {% set TARGET_TEMP = TEMPS[FILAMENT]|default(220) %}

    {% if TYPE == "direct" %}
        {% set RETRACT_LENGTH = params.RETRACT_LENGTH|default(50)|float %}
        {% set RETRACT_SPEED = params.RETRACT_SPEED|default(300)|float %}
    {% elif TYPE == "bowden" %}
        {% set RETRACT_LENGTH = params.RETRACT_LENGTH|default(750)|float %}
        {% set RETRACT_SPEED = params.RETRACT_SPEED|default(600)|float %}
    {% else %}
        M117 Tipo de extrusor inválido!
        RETURN
    {% endif %}

    M117 Aquecendo bico para {FILAMENT}...
    M109 S{TARGET_TEMP}                     ; Aquecer e aguardar a temperatura alvo

    M117 Descarregando {FILAMENT} ({TYPE})...
    G91                                     ; Modo de posicionamento relativo
    G1 E5 F300                              ; Extrudar um pouco para amolecer a ponta
    G1 E-{RETRACT_LENGTH} F{RETRACT_SPEED}  ; Retrair o filamento
    G90                                     ; Retornar ao modo absoluto
    M400                                    ; Garantir que os movimentos terminem
    M117 {FILAMENT} descarregado ({TYPE})




## Filament Change ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 130mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, simply resume the print.
[gcode_macro M600]
description: Troca de filamento (Compatível com M600)
gcode:
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set x_endstop = printer.configfile.config["stepper_x"]["position_endstop"]|float %}
    {% set y_endstop = printer.configfile.config["stepper_y"]["position_endstop"]|float %}
    
    {% if x_endstop == 0 %}
        {% set X = params.X|default(x_endstop + 5)|float %}
    {% else %}
        {% set X = params.X|default(x_endstop - 5)|float %}
    {% endif %}
    
    {% if y_endstop == 0 %}
        {% set Y = params.Y|default(y_endstop + 5)|float %}
    {% else %}
        {% set Y = params.Y|default(y_endstop - 5)|float %}
    {% endif %}
    
    {% set X = [X, 5, max_x - 5]|sort|first %}  # Limita X entre 5 e max_x - 5
    {% set Y = [Y, 5, max_y - 5]|sort|first %}  # Limita Y entre 5 e max_y - 5
    
    {% set Z = params.Z|default(10)|float %}
    {% set E = params.E|default(-50)|float %}
    {% set RETRACT = params.RETRACT|default(5)|float %}
    {% set PURGE = params.PURGE|default(10)|float %}


    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                           ; Modo relativo
        G1 E-{RETRACT} F4000          ; Retração inicial
        G1 Z{Z}                       ; Levantar o bico
        G90                           ; Modo absoluto
        G1 X{X} Y{Y} F3000            ; Mover para a posição de troca
        G91                           ; Voltar ao modo relativo
        G1 E{PURGE} F500              ; Extrudir filamento para criar uma bolha na ponta
        G1 E{E} F600                  ; Retrair filamento adicional
        G92 E0                        ; Resetar posição do extrusor
    {% else %}
        { action_respond_info("Impressora não está homed. Faça o homing antes de trocar o filamento.") }
    {% endif %}
    M117 Troque o filamento e pressione RESUME

[gcode_macro DUMP_PARAMETERS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}